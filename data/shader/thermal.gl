#version 150

uniform vec3 eye;
in vec3 fragmentColor;
in vec3 fragmentNormal;
in vec3 fragmentPosition;
out vec4 outColor;
uniform vec4 skycol;

void main()
{
	vec3 normals = fragmentNormal;

	vec3 ambient = vec3(1.0);
	vec3 sun_dir = normalize(vec3(-0.7,0.1,1.0));
	vec3 diffuse = vec3(1)*max(dot(normals, sun_dir), 0);
	vec3 v = normalize(eye-fragmentPosition);
	vec3 h = normalize(v+sun_dir);
	vec3 specular = vec3(0.5,0.2,0.2)*pow(max(dot(normals, h),0), 10);

	vec3 material = fragmentColor;
	vec3 light = ambient+diffuse+specular;
	float distance = length(eye-fragmentPosition);
	vec3 col = material*light;
	col = mix(col, skycol.rgb, clamp(distance/128,0,1));
	outColor = vec4(col, 1.0);
}
